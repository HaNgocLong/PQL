// Generated from PQL.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PQLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		UNIVERSE=1, ATTRIBUTE_NAME=2, STRING=3, INTEGER=4, VARIABLE_NAME=5, SIMILARITY=6, 
		LP=7, RP=8, LB=9, RB=10, LSB=11, RSB=12, LTB=13, RTB=14, DQ=15, EOS=16, 
		SEP=17, ASSIGN=18, TILDE=19, ESC_SEQ=20, UNICODE_ESC=21, HEX_DIGIT=22, 
		WS=23, LINE_COMMENT=24, SELECT=25, INSERT=26, INTO=27, FROM=28, WHERE=29, 
		EQUALS=30, OVERLAPS=31, WITH=32, SUBSET=33, PROPER=34, GET_TASKS=35, NOT=36, 
		AND=37, OR=38, ANY=39, EACH=40, ALL=41, IN=42, IS=43, OF=44, TRUE=45, 
		FALSE=46, UNION=47, INTERSECTION=48, DIFFERENCE=49, CAN_OCCUR=50, ALWAYS_OCCURS=51, 
		EXECUTES=52, CAN_CONFLICT=53, CAN_COOCCUR=54, CONFLICT=55, COOCCUR=56, 
		TOTAL_CAUSAL=57, TOTAL_CONCUR=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'*'", "ATTRIBUTE_NAME", "STRING", "INTEGER", "VARIABLE_NAME", "SIMILARITY", 
		"'('", "')'", "'{'", "'}'", "'['", "']'", "'<'", "'>'", "'\"'", "';'", 
		"','", "'='", "'~'", "ESC_SEQ", "UNICODE_ESC", "HEX_DIGIT", "WS", "LINE_COMMENT", 
		"'SELECT'", "'INSERT'", "'INTO'", "'FROM'", "'WHERE'", "'EQUALS'", "'OVERLAPS'", 
		"'WITH'", "'SUBSET'", "'PROPER'", "'GetTasks'", "'NOT'", "'AND'", "'OR'", 
		"'ANY'", "'EACH'", "'ALL'", "'IN'", "'IS'", "'OF'", "'TRUE'", "'FALSE'", 
		"'UNION'", "'INTERSECT'", "'EXCEPT'", "'CanOccur'", "'AlwaysOccurs'", 
		"'Executes'", "'CanConflict'", "'CanCooccur'", "'Conflict'", "'Cooccur'", 
		"'TotalCausal'", "'TotalConcurrent'"
	};
	public static final String[] ruleNames = {
		"UNIVERSE", "ATTRIBUTE_NAME", "STRING", "INTEGER", "VARIABLE_NAME", "SIMILARITY", 
		"LP", "RP", "LB", "RB", "LSB", "RSB", "LTB", "RTB", "DQ", "EOS", "SEP", 
		"ASSIGN", "TILDE", "ESC_SEQ", "UNICODE_ESC", "HEX_DIGIT", "WS", "LINE_COMMENT", 
		"SELECT", "INSERT", "INTO", "FROM", "WHERE", "EQUALS", "OVERLAPS", "WITH", 
		"SUBSET", "PROPER", "GET_TASKS", "NOT", "AND", "OR", "ANY", "EACH", "ALL", 
		"IN", "IS", "OF", "TRUE", "FALSE", "UNION", "INTERSECTION", "DIFFERENCE", 
		"CAN_OCCUR", "ALWAYS_OCCURS", "EXECUTES", "CAN_CONFLICT", "CAN_COOCCUR", 
		"CONFLICT", "COOCCUR", "TOTAL_CAUSAL", "TOTAL_CONCUR"
	};


	public PQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 22: WS_action((RuleContext)_localctx, actionIndex); break;

		case 23: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2<\u01d7\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\3"+
		"\3\3\7\3|\n\3\f\3\16\3\177\13\3\3\4\3\4\3\4\7\4\u0084\n\4\f\4\16\4\u0087"+
		"\13\4\3\4\3\4\3\5\3\5\3\5\7\5\u008e\n\5\f\5\16\5\u0091\13\5\5\5\u0093"+
		"\n\5\3\6\3\6\7\6\u0097\n\6\f\6\16\6\u009a\13\6\3\7\3\7\3\7\3\7\6\7\u00a0"+
		"\n\7\r\7\16\7\u00a1\5\7\u00a4\n\7\3\7\3\7\6\7\u00a8\n\7\r\7\16\7\u00a9"+
		"\5\7\u00ac\n\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\25\5\25\u00cb\n\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\30\6\30\u00d7\n\30\r\30\16\30\u00d8\3\30\3\30\3\31\3\31\3\31\3\31\7"+
		"\31\u00e1\n\31\f\31\16\31\u00e4\13\31\3\31\3\31\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3"+
		"\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*"+
		"\3*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64"+
		"\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67"+
		"\3\67\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\38\38\38\39\39\3"+
		"9\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3"+
		";\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\2<\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b"+
		"\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1"+
		"!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\2\61\32\3\63\33\1\65\34"+
		"\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S"+
		"+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\1i\66\1k\67\1m8"+
		"\1o9\1q:\1s;\1u<\1\3\2\13\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4\2aac|\5"+
		"\2\62;aac|\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch\5\2\13\f\17\17\"\"\4\2"+
		"\f\f\17\17\u01e4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k"+
		"\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2"+
		"\2\2\5y\3\2\2\2\7\u0080\3\2\2\2\t\u0092\3\2\2\2\13\u0094\3\2\2\2\r\u00ab"+
		"\3\2\2\2\17\u00ad\3\2\2\2\21\u00af\3\2\2\2\23\u00b1\3\2\2\2\25\u00b3\3"+
		"\2\2\2\27\u00b5\3\2\2\2\31\u00b7\3\2\2\2\33\u00b9\3\2\2\2\35\u00bb\3\2"+
		"\2\2\37\u00bd\3\2\2\2!\u00bf\3\2\2\2#\u00c1\3\2\2\2%\u00c3\3\2\2\2\'\u00c5"+
		"\3\2\2\2)\u00ca\3\2\2\2+\u00cc\3\2\2\2-\u00d3\3\2\2\2/\u00d6\3\2\2\2\61"+
		"\u00dc\3\2\2\2\63\u00e7\3\2\2\2\65\u00ee\3\2\2\2\67\u00f5\3\2\2\29\u00fa"+
		"\3\2\2\2;\u00ff\3\2\2\2=\u0105\3\2\2\2?\u010c\3\2\2\2A\u0115\3\2\2\2C"+
		"\u011a\3\2\2\2E\u0121\3\2\2\2G\u0128\3\2\2\2I\u0131\3\2\2\2K\u0135\3\2"+
		"\2\2M\u0139\3\2\2\2O\u013c\3\2\2\2Q\u0140\3\2\2\2S\u0145\3\2\2\2U\u0149"+
		"\3\2\2\2W\u014c\3\2\2\2Y\u014f\3\2\2\2[\u0152\3\2\2\2]\u0157\3\2\2\2_"+
		"\u015d\3\2\2\2a\u0163\3\2\2\2c\u016d\3\2\2\2e\u0174\3\2\2\2g\u017d\3\2"+
		"\2\2i\u018a\3\2\2\2k\u0193\3\2\2\2m\u019f\3\2\2\2o\u01aa\3\2\2\2q\u01b3"+
		"\3\2\2\2s\u01bb\3\2\2\2u\u01c7\3\2\2\2wx\7,\2\2x\4\3\2\2\2y}\t\2\2\2z"+
		"|\t\3\2\2{z\3\2\2\2|\177\3\2\2\2}{\3\2\2\2}~\3\2\2\2~\6\3\2\2\2\177}\3"+
		"\2\2\2\u0080\u0085\5\37\20\2\u0081\u0084\5)\25\2\u0082\u0084\n\4\2\2\u0083"+
		"\u0081\3\2\2\2\u0083\u0082\3\2\2\2\u0084\u0087\3\2\2\2\u0085\u0083\3\2"+
		"\2\2\u0085\u0086\3\2\2\2\u0086\u0088\3\2\2\2\u0087\u0085\3\2\2\2\u0088"+
		"\u0089\5\37\20\2\u0089\b\3\2\2\2\u008a\u0093\7\62\2\2\u008b\u008f\4\63"+
		";\2\u008c\u008e\4\62;\2\u008d\u008c\3\2\2\2\u008e\u0091\3\2\2\2\u008f"+
		"\u008d\3\2\2\2\u008f\u0090\3\2\2\2\u0090\u0093\3\2\2\2\u0091\u008f\3\2"+
		"\2\2\u0092\u008a\3\2\2\2\u0092\u008b\3\2\2\2\u0093\n\3\2\2\2\u0094\u0098"+
		"\t\5\2\2\u0095\u0097\t\6\2\2\u0096\u0095\3\2\2\2\u0097\u009a\3\2\2\2\u0098"+
		"\u0096\3\2\2\2\u0098\u0099\3\2\2\2\u0099\f\3\2\2\2\u009a\u0098\3\2\2\2"+
		"\u009b\u00ac\7\63\2\2\u009c\u00a3\7\62\2\2\u009d\u009f\7\60\2\2\u009e"+
		"\u00a0\4\62;\2\u009f\u009e\3\2\2\2\u00a0\u00a1\3\2\2\2\u00a1\u009f\3\2"+
		"\2\2\u00a1\u00a2\3\2\2\2\u00a2\u00a4\3\2\2\2\u00a3\u009d\3\2\2\2\u00a3"+
		"\u00a4\3\2\2\2\u00a4\u00ac\3\2\2\2\u00a5\u00a7\7\60\2\2\u00a6\u00a8\4"+
		"\62;\2\u00a7\u00a6\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00a7\3\2\2\2\u00a9"+
		"\u00aa\3\2\2\2\u00aa\u00ac\3\2\2\2\u00ab\u009b\3\2\2\2\u00ab\u009c\3\2"+
		"\2\2\u00ab\u00a5\3\2\2\2\u00ac\16\3\2\2\2\u00ad\u00ae\7*\2\2\u00ae\20"+
		"\3\2\2\2\u00af\u00b0\7+\2\2\u00b0\22\3\2\2\2\u00b1\u00b2\7}\2\2\u00b2"+
		"\24\3\2\2\2\u00b3\u00b4\7\177\2\2\u00b4\26\3\2\2\2\u00b5\u00b6\7]\2\2"+
		"\u00b6\30\3\2\2\2\u00b7\u00b8\7_\2\2\u00b8\32\3\2\2\2\u00b9\u00ba\7>\2"+
		"\2\u00ba\34\3\2\2\2\u00bb\u00bc\7@\2\2\u00bc\36\3\2\2\2\u00bd\u00be\7"+
		"$\2\2\u00be \3\2\2\2\u00bf\u00c0\7=\2\2\u00c0\"\3\2\2\2\u00c1\u00c2\7"+
		".\2\2\u00c2$\3\2\2\2\u00c3\u00c4\7?\2\2\u00c4&\3\2\2\2\u00c5\u00c6\7\u0080"+
		"\2\2\u00c6(\3\2\2\2\u00c7\u00c8\7^\2\2\u00c8\u00cb\t\7\2\2\u00c9\u00cb"+
		"\5+\26\2\u00ca\u00c7\3\2\2\2\u00ca\u00c9\3\2\2\2\u00cb*\3\2\2\2\u00cc"+
		"\u00cd\7^\2\2\u00cd\u00ce\7w\2\2\u00ce\u00cf\5-\27\2\u00cf\u00d0\5-\27"+
		"\2\u00d0\u00d1\5-\27\2\u00d1\u00d2\5-\27\2\u00d2,\3\2\2\2\u00d3\u00d4"+
		"\t\b\2\2\u00d4.\3\2\2\2\u00d5\u00d7\t\t\2\2\u00d6\u00d5\3\2\2\2\u00d7"+
		"\u00d8\3\2\2\2\u00d8\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00da\3\2"+
		"\2\2\u00da\u00db\b\30\2\2\u00db\60\3\2\2\2\u00dc\u00dd\7/\2\2\u00dd\u00de"+
		"\7/\2\2\u00de\u00e2\3\2\2\2\u00df\u00e1\n\n\2\2\u00e0\u00df\3\2\2\2\u00e1"+
		"\u00e4\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2\u00e3\3\2\2\2\u00e3\u00e5\3\2"+
		"\2\2\u00e4\u00e2\3\2\2\2\u00e5\u00e6\b\31\3\2\u00e6\62\3\2\2\2\u00e7\u00e8"+
		"\7U\2\2\u00e8\u00e9\7G\2\2\u00e9\u00ea\7N\2\2\u00ea\u00eb\7G\2\2\u00eb"+
		"\u00ec\7E\2\2\u00ec\u00ed\7V\2\2\u00ed\64\3\2\2\2\u00ee\u00ef\7K\2\2\u00ef"+
		"\u00f0\7P\2\2\u00f0\u00f1\7U\2\2\u00f1\u00f2\7G\2\2\u00f2\u00f3\7T\2\2"+
		"\u00f3\u00f4\7V\2\2\u00f4\66\3\2\2\2\u00f5\u00f6\7K\2\2\u00f6\u00f7\7"+
		"P\2\2\u00f7\u00f8\7V\2\2\u00f8\u00f9\7Q\2\2\u00f98\3\2\2\2\u00fa\u00fb"+
		"\7H\2\2\u00fb\u00fc\7T\2\2\u00fc\u00fd\7Q\2\2\u00fd\u00fe\7O\2\2\u00fe"+
		":\3\2\2\2\u00ff\u0100\7Y\2\2\u0100\u0101\7J\2\2\u0101\u0102\7G\2\2\u0102"+
		"\u0103\7T\2\2\u0103\u0104\7G\2\2\u0104<\3\2\2\2\u0105\u0106\7G\2\2\u0106"+
		"\u0107\7S\2\2\u0107\u0108\7W\2\2\u0108\u0109\7C\2\2\u0109\u010a\7N\2\2"+
		"\u010a\u010b\7U\2\2\u010b>\3\2\2\2\u010c\u010d\7Q\2\2\u010d\u010e\7X\2"+
		"\2\u010e\u010f\7G\2\2\u010f\u0110\7T\2\2\u0110\u0111\7N\2\2\u0111\u0112"+
		"\7C\2\2\u0112\u0113\7R\2\2\u0113\u0114\7U\2\2\u0114@\3\2\2\2\u0115\u0116"+
		"\7Y\2\2\u0116\u0117\7K\2\2\u0117\u0118\7V\2\2\u0118\u0119\7J\2\2\u0119"+
		"B\3\2\2\2\u011a\u011b\7U\2\2\u011b\u011c\7W\2\2\u011c\u011d\7D\2\2\u011d"+
		"\u011e\7U\2\2\u011e\u011f\7G\2\2\u011f\u0120\7V\2\2\u0120D\3\2\2\2\u0121"+
		"\u0122\7R\2\2\u0122\u0123\7T\2\2\u0123\u0124\7Q\2\2\u0124\u0125\7R\2\2"+
		"\u0125\u0126\7G\2\2\u0126\u0127\7T\2\2\u0127F\3\2\2\2\u0128\u0129\7I\2"+
		"\2\u0129\u012a\7g\2\2\u012a\u012b\7v\2\2\u012b\u012c\7V\2\2\u012c\u012d"+
		"\7c\2\2\u012d\u012e\7u\2\2\u012e\u012f\7m\2\2\u012f\u0130\7u\2\2\u0130"+
		"H\3\2\2\2\u0131\u0132\7P\2\2\u0132\u0133\7Q\2\2\u0133\u0134\7V\2\2\u0134"+
		"J\3\2\2\2\u0135\u0136\7C\2\2\u0136\u0137\7P\2\2\u0137\u0138\7F\2\2\u0138"+
		"L\3\2\2\2\u0139\u013a\7Q\2\2\u013a\u013b\7T\2\2\u013bN\3\2\2\2\u013c\u013d"+
		"\7C\2\2\u013d\u013e\7P\2\2\u013e\u013f\7[\2\2\u013fP\3\2\2\2\u0140\u0141"+
		"\7G\2\2\u0141\u0142\7C\2\2\u0142\u0143\7E\2\2\u0143\u0144\7J\2\2\u0144"+
		"R\3\2\2\2\u0145\u0146\7C\2\2\u0146\u0147\7N\2\2\u0147\u0148\7N\2\2\u0148"+
		"T\3\2\2\2\u0149\u014a\7K\2\2\u014a\u014b\7P\2\2\u014bV\3\2\2\2\u014c\u014d"+
		"\7K\2\2\u014d\u014e\7U\2\2\u014eX\3\2\2\2\u014f\u0150\7Q\2\2\u0150\u0151"+
		"\7H\2\2\u0151Z\3\2\2\2\u0152\u0153\7V\2\2\u0153\u0154\7T\2\2\u0154\u0155"+
		"\7W\2\2\u0155\u0156\7G\2\2\u0156\\\3\2\2\2\u0157\u0158\7H\2\2\u0158\u0159"+
		"\7C\2\2\u0159\u015a\7N\2\2\u015a\u015b\7U\2\2\u015b\u015c\7G\2\2\u015c"+
		"^\3\2\2\2\u015d\u015e\7W\2\2\u015e\u015f\7P\2\2\u015f\u0160\7K\2\2\u0160"+
		"\u0161\7Q\2\2\u0161\u0162\7P\2\2\u0162`\3\2\2\2\u0163\u0164\7K\2\2\u0164"+
		"\u0165\7P\2\2\u0165\u0166\7V\2\2\u0166\u0167\7G\2\2\u0167\u0168\7T\2\2"+
		"\u0168\u0169\7U\2\2\u0169\u016a\7G\2\2\u016a\u016b\7E\2\2\u016b\u016c"+
		"\7V\2\2\u016cb\3\2\2\2\u016d\u016e\7G\2\2\u016e\u016f\7Z\2\2\u016f\u0170"+
		"\7E\2\2\u0170\u0171\7G\2\2\u0171\u0172\7R\2\2\u0172\u0173\7V\2\2\u0173"+
		"d\3\2\2\2\u0174\u0175\7E\2\2\u0175\u0176\7c\2\2\u0176\u0177\7p\2\2\u0177"+
		"\u0178\7Q\2\2\u0178\u0179\7e\2\2\u0179\u017a\7e\2\2\u017a\u017b\7w\2\2"+
		"\u017b\u017c\7t\2\2\u017cf\3\2\2\2\u017d\u017e\7C\2\2\u017e\u017f\7n\2"+
		"\2\u017f\u0180\7y\2\2\u0180\u0181\7c\2\2\u0181\u0182\7{\2\2\u0182\u0183"+
		"\7u\2\2\u0183\u0184\7Q\2\2\u0184\u0185\7e\2\2\u0185\u0186\7e\2\2\u0186"+
		"\u0187\7w\2\2\u0187\u0188\7t\2\2\u0188\u0189\7u\2\2\u0189h\3\2\2\2\u018a"+
		"\u018b\7G\2\2\u018b\u018c\7z\2\2\u018c\u018d\7g\2\2\u018d\u018e\7e\2\2"+
		"\u018e\u018f\7w\2\2\u018f\u0190\7v\2\2\u0190\u0191\7g\2\2\u0191\u0192"+
		"\7u\2\2\u0192j\3\2\2\2\u0193\u0194\7E\2\2\u0194\u0195\7c\2\2\u0195\u0196"+
		"\7p\2\2\u0196\u0197\7E\2\2\u0197\u0198\7q\2\2\u0198\u0199\7p\2\2\u0199"+
		"\u019a\7h\2\2\u019a\u019b\7n\2\2\u019b\u019c\7k\2\2\u019c\u019d\7e\2\2"+
		"\u019d\u019e\7v\2\2\u019el\3\2\2\2\u019f\u01a0\7E\2\2\u01a0\u01a1\7c\2"+
		"\2\u01a1\u01a2\7p\2\2\u01a2\u01a3\7E\2\2\u01a3\u01a4\7q\2\2\u01a4\u01a5"+
		"\7q\2\2\u01a5\u01a6\7e\2\2\u01a6\u01a7\7e\2\2\u01a7\u01a8\7w\2\2\u01a8"+
		"\u01a9\7t\2\2\u01a9n\3\2\2\2\u01aa\u01ab\7E\2\2\u01ab\u01ac\7q\2\2\u01ac"+
		"\u01ad\7p\2\2\u01ad\u01ae\7h\2\2\u01ae\u01af\7n\2\2\u01af\u01b0\7k\2\2"+
		"\u01b0\u01b1\7e\2\2\u01b1\u01b2\7v\2\2\u01b2p\3\2\2\2\u01b3\u01b4\7E\2"+
		"\2\u01b4\u01b5\7q\2\2\u01b5\u01b6\7q\2\2\u01b6\u01b7\7e\2\2\u01b7\u01b8"+
		"\7e\2\2\u01b8\u01b9\7w\2\2\u01b9\u01ba\7t\2\2\u01bar\3\2\2\2\u01bb\u01bc"+
		"\7V\2\2\u01bc\u01bd\7q\2\2\u01bd\u01be\7v\2\2\u01be\u01bf\7c\2\2\u01bf"+
		"\u01c0\7n\2\2\u01c0\u01c1\7E\2\2\u01c1\u01c2\7c\2\2\u01c2\u01c3\7w\2\2"+
		"\u01c3\u01c4\7u\2\2\u01c4\u01c5\7c\2\2\u01c5\u01c6\7n\2\2\u01c6t\3\2\2"+
		"\2\u01c7\u01c8\7V\2\2\u01c8\u01c9\7q\2\2\u01c9\u01ca\7v\2\2\u01ca\u01cb"+
		"\7c\2\2\u01cb\u01cc\7n\2\2\u01cc\u01cd\7E\2\2\u01cd\u01ce\7q\2\2\u01ce"+
		"\u01cf\7p\2\2\u01cf\u01d0\7e\2\2\u01d0\u01d1\7w\2\2\u01d1\u01d2\7t\2\2"+
		"\u01d2\u01d3\7t\2\2\u01d3\u01d4\7g\2\2\u01d4\u01d5\7p\2\2\u01d5\u01d6"+
		"\7v\2\2\u01d6v\3\2\2\2\20\2}\u0083\u0085\u008f\u0092\u0098\u00a1\u00a3"+
		"\u00a9\u00ab\u00ca\u00d8\u00e2";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}